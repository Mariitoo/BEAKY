<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>